import os
import pandas as pd
#getting all files from all subdirectories and paths to said files
imgs = []
name_as_lst = []
VGnums = set()
VDnums = set()
target_prefix = "NEGF"

for root, dirs, files in os.walk("/home/kyle/ML_NEGF/main_data_dir"):
    for name in files:
      if name.startswith(target_prefix):
        name = str(name).split(".txt")[0] #Removing .txt at end of strings
        name_as_lst = name.split("_") #Spliting to 
        XY = name_as_lst.pop(0)[-2:]
        name_as_lst.insert(0,XY)
        Critiria = str(root).split("/")[-3]
        Shape = str(root).split("/")[-2].split("x")
        Height = Shape[0]
        Width = Shape[1]
        imgs.append(name_as_lst + [Critiria,Height,Width] +[os.path.join(root, name)])




imgsdf = pd.DataFrame(imgs,columns=['Plane','VG','VD','Location',"Type","Iteration","Critiria","Height","Width","Path"])
imgsdf.to_csv("/home/kyle/ML_NEGF/test_csv_output/test.csv")

print("The data frame starts with {} rows \n".format(len(imgsdf.index)))

def extended_query(string,df):
   args = string.split(" ")
   height,width = args[0],args[1]
   if len(args) == 3 and (args[2].upper() == "ALL"):
      #go to special case all function
      selectedDf = df.query("Height == '{}' and Width == '{}'".format(height,width))
   else:
      selection,VGVD = args[2],args[3]
      selection = selection.split(":")
      selection[0] = selection[0].upper()
      VGVD = VGVD.split(":")
      shapeDF = df.query("Height == '{}' and Width == '{}' and {} == '{}'".format(height,width,VGVD[0],VGVD[1]))
      if selection[0].startswith("P"):
         percent = int(selection[1])/100
         selectedDf = shapeDF.sample(frac = percent)
      elif selection[0].startswith("R"):
         ranges = selection[1].split("to")
         start,stop = int(ranges[0]),int(ranges[1])
         selectedDf = shapeDF[start:stop]
      elif selection[0].startswith("S"):
         strIndices = selection[1].split(",")
         intIndices = [int(i) for i in strIndices]
         selectedDf = shapeDF.iloc[intIndices]
      else:
         print("Error: Invalid data selection must choose from, Percentage, Range, Specific.")

   #Finds the indices of selected data so that it can be removed from df
   index = selectedDf.index
   df = df.drop(index)
   print(df)
   print("\n")
   return selectedDf

querieddf = extended_query("3 9 Percentage:50 VD:0.05",imgsdf)
print("The queried dataframe contains {} rows".format(len(querieddf.index)))
print(querieddf)

