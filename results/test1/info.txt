-----------Location-----------
folder name         :results/test1
----------Parameters----------
layers              :[8, 16, 32, 64]
batch size          :50
epochs              :500
lr                  :1.0e-03
generate XY         :True
residu              :{}
device              :cpu
img channels        :7
addX                :True
------------------------------
data split:         :70/30
train samples       :1474
test samples        :632
total               :2106
------------Model-------------
VAE(
  (enc_modules): ModuleList(
    (0): Sequential(
      (0): Conv2d(7, 8, kernel_size=(5, 5), stride=(1, 1))
      (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): Dropout(p=0.3, inplace=False)
      (3): LeakyReLU(negative_slope=0.01)
    )
    (1): Sequential(
      (0): Conv2d(8, 16, kernel_size=(5, 5), stride=(1, 1))
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): Dropout(p=0.3, inplace=False)
      (3): LeakyReLU(negative_slope=0.01)
    )
    (2): Sequential(
      (0): Conv2d(16, 32, kernel_size=(5, 5), stride=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): Dropout(p=0.3, inplace=False)
      (3): LeakyReLU(negative_slope=0.01)
    )
    (3): Sequential(
      (0): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): Dropout(p=0.3, inplace=False)
      (3): LeakyReLU(negative_slope=0.01)
    )
  )
  (dec_modules): ModuleList(
    (0): Sequential(
      (0): ConvTranspose2d(64, 32, kernel_size=(5, 5), stride=(1, 1))
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): Dropout(p=0.3, inplace=False)
      (3): ReLU()
    )
    (1): Sequential(
      (0): ConvTranspose2d(32, 16, kernel_size=(5, 5), stride=(1, 1))
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): Dropout(p=0.3, inplace=False)
      (3): ReLU()
    )
    (2): Sequential(
      (0): ConvTranspose2d(16, 8, kernel_size=(5, 5), stride=(1, 1))
      (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): Dropout(p=0.3, inplace=False)
      (3): ReLU()
    )
    (3): Sequential(
      (0): ConvTranspose2d(8, 1, kernel_size=(5, 5), stride=(1, 1))
    )
  )
)
----------Optimiser-----------
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.001
    maximize: False
    weight_decay: 0
)
